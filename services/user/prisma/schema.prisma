// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
enum Role {
  user 
  admin 
  player
  team
  expert
  sponsor
}
enum Gender {
  male 
  female 
  other
}
model UserProfile {
  id String @id @default(uuid()) // Matches the `id` in Auth Service's User table
  firstName String @map("first_name")
  lastName String @map("last_name")
  username String @unique
  photo String?
  gender Gender?
  age Int?
  birthYear Int? @map("birth_year")
  language String[] 
  height Float?
  weight Float?
  skinColor String? @map("skin_color")
  city String?
  country String?
  bio String?
  socialLinks Json? @map("social_links")
  interests String[] // Only for general users
  profession String? // For artists and experts
  subProfession String? // For artists and experts
  company String? // For sponsors
  role Role
  services ExpertService[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  uploads Media[]
  documents Document[]
}

model Media {
  id String @id @default(uuid())
  title String?
  url String 
  type MediaType
  userId String @map("user_id")
  user UserProfile @relation(fields: [userId],references: [id])
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}
enum MediaType {
  photo 
  video
}
enum DocumentType {
  certificate
  award
}
model Document {
  id String @id @default(uuid())
  title String
  issuedBy String @map("issued_by")
  issuedDate String? @map("issued_date") 
  imageUrl String? @map("image_url")
  type DocumentType
  description String?
  userId String @map("user_id")
  user UserProfile @relation(fields: [userId],references: [id])
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}
enum ServiceType {
  ONLINE_ASSESSMENT
  ONLINE_TRAINING
  ON_GROUND_ASSESSMENT
}

model Service {
  id String @id @default(uuid())
  name ServiceType @unique
  description String?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  experts ExpertService[]
}
model ExpertService {
  id String @id @default(uuid())
  expertId String @map("expert_id")
  expert UserProfile @relation(fields: [expertId],references: [id])
  serviceId String @map("service_id")
  service Service @relation(fields: [serviceId],references: [id])
  price Float
  additionalDetails Json? @map("additional_details")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  @@unique([expertId, serviceId])
}